legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical",
legend.spacing.y = unit(0, 'lines'))
p7
dd2
p7 <- ggplot(dd2, aes(x1, x2, group=label, color=label,linetype=label)) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c("solid","solid","dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical", legend.spacing.y = unit(0, 'lines'))
p7
dd2 <- data.frame(
x1 = 1, x2 = 2,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")
)
p7 <- ggplot(dd2, aes(x1, x2, color = factor(label,levels = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)')))) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c(1,1,"dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical",
legend.spacing.y = unit(0, 'lines'))
p7
legend_combined <- ggpubr::get_legend(p6) %>% as_ggplot() +
ggpubr::get_legend(p7) %>% as_ggplot() + plot_layout(ncol=1,heights=c(1,1))
risk_guide <- p1+p2+p3+p4+p5+legend_combined +
plot_layout(ncol = 2,widths = c(1,1,1,1,1,1))+
plot_annotation(tag_levels=list(c("a","b","c","d","e","",""),""))
risk_guide
dd2 <- data.frame(
x1 = 1:2, x2 = 1:2,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")
)
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")
)
dd2
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")
) %>%
lice(rep(1:n(), each = 2))
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")
) %>%
slice(rep(1:n(), each = 2))
data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")
) %>%
slice(rep(1:n(), each = 2))
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")) %>%
slice(rep(1:n(), each = 2))
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")) %>%
slice(rep(1:dplyr:n(), each = 2))
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")) %>%
slice(rep(1:dplyr::n(), each = 2))
dd2
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")) %>%
slice(rep(1:dplyr::n(), each = 2))
p7 <- ggplot(dd2, aes(x1, x2, color = factor(label,levels = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)')))) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c(1,1,"dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical",
legend.spacing.y = unit(0, 'lines'))
p7
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")) %>%
slice(rep(1:dplyr::n(), each = 2))
p7 <- ggplot(dd2, aes(x1, x2, color = factor(label,levels = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)')))) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c(1,1,"dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical",
legend.spacing.y = unit(0, 'lines'))
p7 <- ggplot(dd2, aes(x1, x2, group=label, color=label,linetype=label)) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c("solid","solid","dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical", legend.spacing.y = unit(0, 'lines'))
p7
dd2 <- data.frame(
x1 = 1, x2 = 2,
label = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)'),
line_type = c("s","s","d")) %>%
slice(rep(1:dplyr::n(), each = 2))
p7 <- ggplot(dd2, aes(x1, x2, color = factor(label,levels = c('0.33 risk ("exceedance unlikely")',
'0.50 risk ("exceedance about as unlikely as not")',
'Environmental limit (best estimate)')))) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c(1,1,"dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical",
legend.spacing.y = unit(0, 'lines'))
p7 <- ggplot(dd2, aes(x1, x2, group=label, color=label,linetype=label)) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c("solid","solid","dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical", legend.spacing.y = unit(0, 'lines'))
p7
dd2
p7 <- ggplot(dd2, aes(x1, x2, group=label, color=label,linetype=label)) +
geom_line() +
#labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c("solid","solid","dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical", legend.spacing.y = unit(0, 'lines'))
p7
legend_combined <- ggpubr::get_legend(p6) %>% as_ggplot() +
ggpubr::get_legend(p7) %>% as_ggplot() + plot_layout(ncol=1,heights=c(1,1))
risk_guide <- p1+p2+p3+p4+p5+legend_combined +
plot_layout(ncol = 2,widths = c(1,1,1,1,1,1))+
plot_annotation(tag_levels=list(c("a","b","c","d","e","",""),""))
risk_guide
p7 <- ggplot(dd2, aes(x1, x2, group=label, color=label,linetype=label)) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c("solid","solid","dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical", legend.spacing.y = unit(0, 'lines'))
p7
p7 <- ggplot(dd2, aes(x1, x2, group=label, color=label,linetype=label)) +
geom_line() +
#labs(x = '', y = '', color = '') +
scale_linetype_manual(values = c("solid","solid","dashed"))+
scale_color_manual(values = alpha(c(blue_spectral,red_spectral,"black"),0.75)) +
theme(#legend.position = c(0.4,0.5),
#legend.location = "inside",
legend.title = element_blank(),
legend.key.spacing.y = unit(0.25, 'lines'),
legend.justification = "left",
legend.text = element_text(size=9.2),
legend.background = element_rect(fill = 'transparent'),
legend.direction = "vertical", legend.spacing.y = unit(0, 'lines'))
p7
legend_combined <- ggpubr::get_legend(p6) %>% as_ggplot() +
ggpubr::get_legend(p7) %>% as_ggplot() + plot_layout(ncol=1,heights=c(1,1))
risk_guide <- p1+p2+p3+p4+p5+legend_combined +
plot_layout(ncol = 2,widths = c(1,1,1,1,1,1))+
plot_annotation(tag_levels=list(c("a","b","c","d","e","",""),""))
ggsave(paste0("Outputs/Composite_barplots/Fig_2_Risk_guide_plot",Sys.Date(),".png", sep = " ") ,
plot = risk_guide,
dpi = 1200, width = 200, height = 200, units = "mm",device ="png", #compression="lzw",
type="cairo")
my_lab <- c("Agricultural area<br>(billion ha)",
"GHG emissions (GtCO<sub>2</sub>-eq yr<sup>-1</sup>)",
"Water withdrawals<br>(1000 km<sup>3</sup> yr<sup>-1</sup>)",
"Nitrogen fertiliser<br>(TgN yr<sup>-1</sup>)",
"Phosphorus fertiliser<br>(TgP yr<sup>-1</sup>)")
# Basic plotting parameters
y_lim <- 1.5
y_low <- 0.0
summary_plot <- Barplot_data %>%
mutate(Indicator_strip = case_when(Indicator==indicators[1]~my_lab[1],
Indicator==indicators[2]~my_lab[2],
Indicator==indicators[3]~my_lab[3],
Indicator==indicators[4]~my_lab[4],
Indicator==indicators[5]~my_lab[5])) %>%
mutate(Max = case_when(Max>y_lim ~ y_lim,
.default = Max),
Min = case_when(Min<y_low ~ y_low,
.default = Min),
Int_level = case_when(Int_level=="Very High" ~ "VHigh",
.default = Int_level)) %>%
rename(Mode_est = Mode) %>%
#ggplot() + aes(Indicator, Risk_joint_mean,
ggplot() + aes(Int_level, exc_avg,
#fill=factor(Indicator,levels = c("Land-system change","Climate change","Freshwater use","Biogeochemical flows")),
colour = factor(Indicator,levels = indicators)) +
#scale_fill_manual(values = alpha(PB_cols,0.85))+
scale_color_manual(values = alpha(PB_cols,1), labels=my_lab
)+
scale_x_discrete(limits = c("Low","Trend","High","VHigh"),
position = "bottom")+
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = Max, ymax = y_lim),
alpha = 0.25,color = NA,
fill = "grey")+
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = Min, ymax = Max),
alpha = 0.04,color = NA,
fill = "grey")+
geom_hline(yintercept=1,linewidth = 0.075,linetype = 2)+
geom_hline(yintercept=1.5,linewidth = 0.15,linetype = 1)+
#geom_hline(yintercept=0,linewidth = 0.25,linetype = 1)+
geom_hline(aes(yintercept= Risk_lwr),linewidth = 0.3,linetype = 1,color=blue_spectral,alpha=0.75)+
geom_hline(aes(yintercept= Risk_upr),linewidth = 0.3,linetype = 1,color=red_spectral,alpha=0.75)+
#geom_hline(aes(yintercept= Mode_est),linewidth = 0.2,linetype = 1,color="black",alpha=0.5)+
geom_pointrange(aes(ymin=exc_lower, ymax= exc_upper),fatten = 2.5)+
scale_y_continuous(expand = expansion(mult = c(0.0,0.15),add = c(0,0.1)), limits=c(y_low,y_lim+0.1),breaks = c(0,0.5,1,y_lim),labels = scales::percent_format(accuracy = 1),
sec.axis = sec_axis(~ ., name = "Intervention", breaks = NULL, labels = NULL)) +
#geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Min),
#          alpha = 0.1,
#          fill = "#1A9900")+
#geom_point(size = 2,shape=8)+
geom_text(aes(label=Pred_avg_char,colour="gray20"),size = 4,y=y_lim+0.25,colour="gray20",
)+
ylab("Percentage relative to 2050 TREND (TREND=100%)") +
xlab("Level of mitigation ambition") +
#facet_grid(factor(Predictor,levels = Barplot_data$Predictor %>% unique())~factor(Int_level,levels = c("Low","Trend","High","Very High"))) +
facet_grid(factor(Predictor,levels = Barplot_data$Predictor %>% unique())~factor(Indicator_strip,levels=my_lab)) +
#theme_linedraw() +
#theme_classic()+
theme_bw()+
theme(legend.position = "none",
legend.title = element_blank(),
#axis.text.x=element_blank(),
#axis.ticks.x = element_blank(),
axis.text = element_text(size=10.5),
axis.title = element_text(size=13),
strip.background = element_rect(colour="black", fill=NA),
#panel.border = element_rect(fill = NA, color = "black"),
strip.text.x = element_markdown(size=11),
strip.text.y = element_text(size=11),
strip.background.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
# panel.grid.major.y = element_line(color = "black",
#                                   linewidth = 0.075,
#                                   linetype = 1),
legend.text = element_markdown(size=11),
legend.key.height= unit(0.01, 'line'),
legend.key.width= unit(0.2, 'line'),
#legend.key.size = unit(0.5, 'cm'), #change legend key size
legend.spacing.x = unit(1, 'line')
)
# Adding custom legend to explain shading
#Source: https://stackoverflow.com/questions/74179948/get-names-of-a-color-based-on-alpha-value
#Source: https://stackoverflow.com/questions/73286221/how-to-add-legend-manually-without-overwriting-the-others-legends-in-ggplot2
dd <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('High risk zone', 'Zone of increasing risk','Safe operating space')
)
p2 <- ggplot(dd, aes(x1, x2,
fill=factor(label,levels = c('High risk zone', 'Zone of increasing risk','Safe operating space')))) +
geom_col() +
labs(x = '', y = '',color = "",fill="") +
scale_fill_manual(values = c(alpha("grey", c(0.5, 0.03)),"white")) +
theme(legend.position = c(0.5, 0), legend.direction   = 'horizontal',
legend.background = element_rect(fill = 'transparent'),legend.text = element_text(size=10.5),
#legend.key=element_rect(colour="black"),
axis.text = element_blank(),axis.ticks = element_blank())
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.50 risk ("exceedance about as unlikely as not")','0.33 risk ("exceedance unlikely")')
)
p3 <- ggplot(dd2, aes(x1, x2, color = label)) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_color_manual(values = alpha(c(blue_spectral,red_spectral),0.75)) +
theme(legend.position = c(0.5, 0), legend.direction   = 'horizontal',legend.text = element_text(size=10.5),
legend.background = element_rect(fill = 'transparent'))
final_plot <- summary_plot + plot_spacer() + p2 + p3 + plot_layout(heights = c(1,0,0,0))
ggsave(paste0("Outputs/Composite_barplots/Fig_3_Composite_barplot_ggplot_",Sys.Date(),".png", sep = " ") , plot = final_plot,
dpi = 1200, width = 260, height = 330, units = "mm",device ="png", #compression="lzw",
type="cairo")
writexl::write_xlsx(Barplot_data,paste0("Outputs/Composite_barplots/Figure_3_all_data_",Sys.Date(),".xlsx"))
my_lab <- c("Agricultural area<br>(billion ha)",
"GHG emissions<br>(GtCO<sub>2</sub>-eq yr<sup>-1</sup>)",
"Water withdrawals<br>(1000 km<sup>3</sup> yr<sup>-1</sup>)",
"Nitrogen fertiliser<br>(TgN yr<sup>-1</sup>)",
"Phosphorus fertiliser<br>(TgP yr<sup>-1</sup>)")
# Basic plotting parameters
y_lim <- 1.5
y_low <- 0.0
summary_plot <- Barplot_data %>%
mutate(Indicator_strip = case_when(Indicator==indicators[1]~my_lab[1],
Indicator==indicators[2]~my_lab[2],
Indicator==indicators[3]~my_lab[3],
Indicator==indicators[4]~my_lab[4],
Indicator==indicators[5]~my_lab[5])) %>%
mutate(Max = case_when(Max>y_lim ~ y_lim,
.default = Max),
Min = case_when(Min<y_low ~ y_low,
.default = Min),
Int_level = case_when(Int_level=="Very High" ~ "VHigh",
.default = Int_level)) %>%
rename(Mode_est = Mode) %>%
#ggplot() + aes(Indicator, Risk_joint_mean,
ggplot() + aes(Int_level, exc_avg,
#fill=factor(Indicator,levels = c("Land-system change","Climate change","Freshwater use","Biogeochemical flows")),
colour = factor(Indicator,levels = indicators)) +
#scale_fill_manual(values = alpha(PB_cols,0.85))+
scale_color_manual(values = alpha(PB_cols,1), labels=my_lab
)+
scale_x_discrete(limits = c("Low","Trend","High","VHigh"),
position = "bottom")+
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = Max, ymax = y_lim),
alpha = 0.25,color = NA,
fill = "grey")+
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = Min, ymax = Max),
alpha = 0.04,color = NA,
fill = "grey")+
geom_hline(yintercept=1,linewidth = 0.075,linetype = 2)+
geom_hline(yintercept=1.5,linewidth = 0.15,linetype = 1)+
#geom_hline(yintercept=0,linewidth = 0.25,linetype = 1)+
geom_hline(aes(yintercept= Risk_lwr),linewidth = 0.3,linetype = 1,color=blue_spectral,alpha=0.75)+
geom_hline(aes(yintercept= Risk_upr),linewidth = 0.3,linetype = 1,color=red_spectral,alpha=0.75)+
#geom_hline(aes(yintercept= Mode_est),linewidth = 0.2,linetype = 1,color="black",alpha=0.5)+
geom_pointrange(aes(ymin=exc_lower, ymax= exc_upper),fatten = 2.5)+
scale_y_continuous(expand = expansion(mult = c(0.0,0.15),add = c(0,0.1)), limits=c(y_low,y_lim+0.1),breaks = c(0,0.5,1,y_lim),labels = scales::percent_format(accuracy = 1),
sec.axis = sec_axis(~ ., name = "Intervention", breaks = NULL, labels = NULL)) +
#geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Min),
#          alpha = 0.1,
#          fill = "#1A9900")+
#geom_point(size = 2,shape=8)+
geom_text(aes(label=Pred_avg_char,colour="gray20"),size = 4,y=y_lim+0.25,colour="gray20",
)+
ylab("Percentage relative to 2050 TREND (TREND=100%)") +
xlab("Level of mitigation ambition") +
#facet_grid(factor(Predictor,levels = Barplot_data$Predictor %>% unique())~factor(Int_level,levels = c("Low","Trend","High","Very High"))) +
facet_grid(factor(Predictor,levels = Barplot_data$Predictor %>% unique())~factor(Indicator_strip,levels=my_lab)) +
#theme_linedraw() +
#theme_classic()+
theme_bw()+
theme(legend.position = "none",
legend.title = element_blank(),
#axis.text.x=element_blank(),
#axis.ticks.x = element_blank(),
axis.text = element_text(size=10.5),
axis.title = element_text(size=13),
strip.background = element_rect(colour="black", fill=NA),
#panel.border = element_rect(fill = NA, color = "black"),
strip.text.x = element_markdown(size=11),
strip.text.y = element_text(size=11),
strip.background.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
# panel.grid.major.y = element_line(color = "black",
#                                   linewidth = 0.075,
#                                   linetype = 1),
legend.text = element_markdown(size=11),
legend.key.height= unit(0.01, 'line'),
legend.key.width= unit(0.2, 'line'),
#legend.key.size = unit(0.5, 'cm'), #change legend key size
legend.spacing.x = unit(1, 'line')
)
# Adding custom legend to explain shading
#Source: https://stackoverflow.com/questions/74179948/get-names-of-a-color-based-on-alpha-value
#Source: https://stackoverflow.com/questions/73286221/how-to-add-legend-manually-without-overwriting-the-others-legends-in-ggplot2
dd <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('High risk zone', 'Zone of increasing risk','Safe operating space')
)
p2 <- ggplot(dd, aes(x1, x2,
fill=factor(label,levels = c('High risk zone', 'Zone of increasing risk','Safe operating space')))) +
geom_col() +
labs(x = '', y = '',color = "",fill="") +
scale_fill_manual(values = c(alpha("grey", c(0.5, 0.03)),"white")) +
theme(legend.position = c(0.5, 0), legend.direction   = 'horizontal',
legend.background = element_rect(fill = 'transparent'),legend.text = element_text(size=10.5),
#legend.key=element_rect(colour="black"),
axis.text = element_blank(),axis.ticks = element_blank())
dd2 <- data.frame(
x1 = NA_real_, x2 = NA_real_,
label = c('0.50 risk ("exceedance about as unlikely as not")','0.33 risk ("exceedance unlikely")')
)
p3 <- ggplot(dd2, aes(x1, x2, color = label)) +
geom_line() +
labs(x = '', y = '', color = '') +
scale_color_manual(values = alpha(c(blue_spectral,red_spectral),0.75)) +
theme(legend.position = c(0.5, 0), legend.direction   = 'horizontal',legend.text = element_text(size=10.5),
legend.background = element_rect(fill = 'transparent'))
final_plot <- summary_plot + plot_spacer() + p2 + p3 + plot_layout(heights = c(1,0,0,0))
ggsave(paste0("Outputs/Composite_barplots/Fig_3_Composite_barplot_ggplot_",Sys.Date(),".png", sep = " ") , plot = final_plot,
dpi = 1200, width = 260, height = 330, units = "mm",device ="png", #compression="lzw",
type="cairo")
writexl::write_xlsx(Barplot_data,paste0("Outputs/Composite_barplots/Figure_3_all_data_",Sys.Date(),".xlsx"))
## 1.0 Setting up script
sim_date <- "2024-11-01" # Date of simulation
today <- Sys.Date() # Today's date
unit_conv <- 100 # Passing from Mkm2 to Mha
unit_conv
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse,fitdistrplus,propagate,extraDistr,distr,future.apply,merTools,readxl)
# Reading necessary files
PBs <- read.csv("Outputs/Environmental_limits/All_PB_limits.csv") # Reading in PB distribution parameters
PBs
# Indicator and broad scenario names
ind <- PBs$Indicator
## 2.0 Producing distributions
i <- 1 # Selecting agricultural area as an example indicator
# Generating random samples
data <- read.csv(paste0("Outputs/Risk_estimates/",ind[i],"_",sim_date,".csv"))
data
ind[i]
# Indicator and broad scenario names
ind <- "Land_system_change"
## 2.0 Producing distributions
i <- 1 # Selecting agricultural area as an example indicator
# Generating random samples
data <- read.csv(paste0("Outputs/Risk_estimates/",ind[i],"_",sim_date,".csv"))
BAU_scen <- data %>% filter(Pop_levels==9.664,Plant_kcal==2700, Waste =="Current",
Diet=="BAU DIET",Yield_levels==1.3,Feed_efficiency=="TREND",
Feed_composition=="TREND")
BAU_scen
data
dim(data)
